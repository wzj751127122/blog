name: master

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      # node 编译
      - name: build
        uses: actions/setup-node@v1
      - run: |
          npm i -g hexo-cli 
          npm i -f
          hexo clean
          hexo g
      # docker build，并push
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.REGISTRYNAME }}
          password: ${{ secrets.REGISTRYPASS }}
          repository: wzj751127122/blog
          tags: ${{ github.sha }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: cn-north-1

      - name: Setup KUBECONFIG for Custom K8s Cluster
        run: echo "${{ secrets.KUBE_CONFIG_EKS }}" > $HOME/kubeconfig
      
      - name: sed TAG
        run: |-
          sed -i 's/{TAG}/${{ github.sha }}/g' deployment.yaml

      - name: Deploy resource to eks cluster
        run: |-
          export KUBECONFIG=$HOME/kubeconfig
          kubectl  get node -o wide
          kubectl apply -f deployment.yaml  --kubeconfig=$KUBECONFIG

      - name: verify deployment
        run: |-
          kubectl rollout status -n blog deployment/blog
      
      # # 让K8s应用deployment
      # - run: |
      #     sed -i 's/{TAG}/${{ github.sha }}/g' deployment.yaml
      # - name: deploy to cluster
      #   uses: danielr1996/kubectl-action@1.0.0
      #   with:
      #     kubeconfig: ${{ secrets.KUBE_CONFIG_EKS }}
      #     args: apply -f deployment.yaml
      # - name: verify deployment
      #   uses: danielr1996/kubectl-action@1.0.0
      #   with:
      #     kubeconfig: ${{ secrets.KUBE_CONFIG_EKS }}
      #     args: '"rollout status -n blog deployment/blog"'
